{"version":3,"sources":["Board.tsx","App.tsx","localStorageDataProvider.ts","index.tsx"],"names":["Banner","_ref","calculatedHours","releaseName","classes","react","Paper_default","a","className","mainFeaturedPost","mainFeaturedPostContent","Typography_Typography_default","align","component","variant","color","gutterBottom","paragraph","GoalEntry","_ref2","name","done","ListItem_default","key","Avatar_default","CheckBoxOutlineBlankRounded_default","onClick","ListItemText_default","primary","SprintEntry","_ref3","date","goals","Grid_default","item","xs","md","Card_default","card","cardDetails","CardContent_default","List_default","map","g","description","Hidden_default","xsDown","CardMedia_default","cardMedia","image","title","Board","_ref4","sprints","teamReleaseGoals","currentRelease","Board_Banner","container","direction","spacing","cardGrid","post","Board_SprintEntry","length","startDate","Divider_default","CardHeader_default","subheader","Board_GoalEntry","Footer","react_default","createElement","footer","Typography_default","DEFAULT_DATA_URL","Blog","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","outputParamsData","queryString","parse","location","search","dataUrl","undefined","state","data","dataProvider","getData","localState","setState","prevProps","prevState","team","releases","teams","find","el","_this2","currentTeam","match","params","getCurrentTeam","startReleaseDate","Date","getTime","nowDate","endDate","Math","round","releaseGoals","Fragment","CssBaseline_default","layout","FormControl_default","formControl","InputLabel_default","htmlFor","FilledInput_default","id","value","onChange","event","target","src_Board","App_Footer","React","Component","withStyles","theme","defineProperty","width","marginLeft","unit","marginRight","breakpoints","up","toolbarMain","borderBottom","concat","palette","grey","toolbarTitle","flex","toolbarSecondary","justifyContent","backgroundColor","common","white","marginBottom","padding","paddingRight","mainGrid","marginTop","display","markdown","sidebarAboutBox","sidebarSection","background","paper","DataProvider","url","localStorageData","localStorage","getItem","axios","get","transformToData","JSON","setItem","stringify","localStorageDataProvider","LocalStorageDataProvider","ReactDOM","render","HashRouter","basename","process","Route","path","src_App","assign","document","getElementById"],"mappings":"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","file":"static/js/main.bef66b54.chunk.js","sourcesContent":["import { Sprint, Release, ReleaseGoal, Goal, IClasses } from \"./interfaces\";\nimport * as React from \"react\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport FilledInput from \"@material-ui/core/FilledInput/FilledInput\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Card from \"@material-ui/core/Card/Card\";\nimport Hidden from \"@material-ui/core/Hidden/Hidden\";\nimport CardMedia from \"@material-ui/core/CardMedia/CardMedia\";\nimport Divider from \"@material-ui/core/Divider/Divider\";\nimport CardContent from \"@material-ui/core/CardContent/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader/CardHeader\";\nimport List from \"@material-ui/core/List/List\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport CheckBoxEmpty from \"@material-ui/icons/CheckBoxOutlineBlankRounded\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\n\nexport interface IBanner extends IClasses {\n  releaseName?: string;\n  calculatedHours?: number;\n}\n\ninterface ISprintEntry extends IClasses, Sprint {}\n\ninterface props extends IClasses, IBanner {\n  sprints?: Sprint[] | 0 | undefined;\n  currentRelease: Release | 0;\n  teamReleaseGoals?: ReleaseGoal[];\n}\n\nconst Banner: React.SFC<IBanner> = ({\n  calculatedHours,\n  releaseName,\n  classes,\n}) => {\n  return (\n    <Paper className={classes.mainFeaturedPost}>\n      <div className={classes.mainFeaturedPostContent}>\n        <Typography\n          align=\"center\"\n          component=\"h1\"\n          variant=\"h3\"\n          color=\"inherit\"\n          gutterBottom\n        >\n          Release \"{releaseName}\"\" Countdown\n        </Typography>\n        <Typography align=\"center\" variant=\"h3\" color=\"error\" paragraph>\n          {calculatedHours} hours\n        </Typography>\n      </div>\n    </Paper>\n  );\n};\nconst GoalEntry: React.SFC<ReleaseGoal> = ({ name, done }) => {\n  return (\n    <ListItem key={name}>\n      <Avatar>\n        <CheckBoxEmpty onClick={() => {}} />\n      </Avatar>\n      <ListItemText primary={name} />\n    </ListItem>\n  );\n};\n\nconst SprintEntry: React.SFC<ISprintEntry> = ({\n  name,\n  date,\n  goals,\n  classes,\n}) => {\n  return (\n    <Grid item key={name} xs={12} md={6}>\n      <Card className={classes.card}>\n        <div className={classes.cardDetails}>\n          <CardContent>\n            <Typography component=\"h2\" variant=\"h5\">\n              {name}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {date}\n            </Typography>\n            <Typography variant=\"subtitle1\" paragraph>\n              <List>\n                {goals.map((g: any) => {\n                  return (\n                    <ListItem key={g.description}>\n                      <Avatar>\n                        <CheckBoxEmpty onClick={() => {}} />\n                      </Avatar>\n                      <ListItemText primary={g.description} />\n                    </ListItem>\n                  );\n                })}\n              </List>\n            </Typography>\n          </CardContent>\n        </div>\n        <Hidden xsDown>\n          <CardMedia\n            className={classes.cardMedia}\n            image=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\" // eslint-disable-line max-len\n            title=\"Image title\"\n          />\n        </Hidden>\n      </Card>\n    </Grid>\n  );\n};\n\nconst Board: React.SFC<props> = ({\n  classes,\n  sprints,\n  releaseName,\n  calculatedHours,\n  teamReleaseGoals,\n  currentRelease,\n}) => {\n  return (\n    <React.Fragment>\n      <Banner\n        classes={classes}\n        releaseName={releaseName}\n        calculatedHours={calculatedHours}\n      />\n      <Grid container direction=\"row\" spacing={40} className={classes.cardGrid}>\n        <Grid container direction=\"column\">\n          {sprints &&\n            sprints.map(post => (\n              <SprintEntry\n                name={post.name}\n                date={post.date}\n                goals={post.goals}\n                classes={classes}\n              />\n            ))}\n          {teamReleaseGoals && teamReleaseGoals.length && (\n            <Grid container direction=\"column\">\n              <Grid item key=\"12345667\" xs={12} md={6}>\n                <Card className={classes.card}>\n                  <div className={classes.cardDetails}>\n                    <CardContent>\n                      <Typography component=\"h2\" variant=\"h5\">\n                        Release \"{releaseName}\"\n                      </Typography>\n                      <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        {currentRelease && currentRelease.startDate}\n                      </Typography>\n                      <Typography variant=\"subtitle1\" paragraph>\n                        <List>\n                          <Divider variant=\"middle\" />\n\n                          <CardHeader title=\"Team Goals\" subheader=\"Wookiees\" />\n                          {teamReleaseGoals.map(g => (\n                            <GoalEntry name={g.name} done={g.done} />\n                          ))}\n                          <Divider variant=\"middle\" />\n                          <CardHeader\n                            subheader=\"234343 \"\n                            title=\"Release Themes\"\n                          />\n                          {teamReleaseGoals.map(g => (\n                            <GoalEntry name={g.name} done={g.done} />\n                          ))}\n                          <Divider variant=\"middle\" />\n                        </List>\n                      </Typography>\n                    </CardContent>\n                  </div>\n                  <Hidden xsDown>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\" // eslint-disable-line max-len\n                      title=\"Image title\"\n                    />\n                  </Hidden>\n                </Card>\n              </Grid>\n              <Divider variant=\"middle\" />\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Board;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport CheckBoxEmpty from \"@material-ui/icons/CheckBoxOutlineBlankRounded\";\nimport CheckBoxRounded from \"@material-ui/icons/CheckBoxRounded\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { IDataProvider, Data, Team, IClasses } from \"./interfaces\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport FilledInput from \"@material-ui/core/FilledInput/FilledInput\";\nimport Board from \"./Board\";\nimport queryString from \"query-string\";\n\nconst styles = (theme: any) => ({\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n      width: 1100,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  toolbarMain: {\n    borderBottom: `1px solid ${theme.palette.grey[300]}`,\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: \"space-between\",\n  },\n  mainFeaturedPost: {\n    backgroundColor: theme.palette.grey[800],\n    // background: `url(\"./wokiees.jpg\")`,\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing.unit * 4,\n  },\n  mainFeaturedPostContent: {\n    padding: `${theme.spacing.unit * 6}px`,\n    [theme.breakpoints.up(\"md\")]: {\n      paddingRight: 0,\n    },\n  },\n  mainGrid: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  card: {\n    display: \"flex\",\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  cardGrid: {\n    padding: `${theme.spacing.unit * 8}px 0`,\n  },\n  cardMedia: {\n    width: 160,\n  },\n  markdown: {\n    padding: `${theme.spacing.unit * 3}px 0`,\n  },\n  sidebarAboutBox: {\n    padding: theme.spacing.unit * 2,\n    backgroundColor: theme.palette.grey[200],\n  },\n  sidebarSection: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing.unit * 8,\n    padding: `${theme.spacing.unit * 6}px 0`,\n  },\n});\n\ninterface PropType {\n  classes: any;\n  dataProvider: IDataProvider;\n  match: any;\n  location: any;\n  // releases: any;\n}\ninterface IState {\n  data: Data;\n  currentRelease: string;\n  dataUrl: string;\n}\n\nconst Footer: React.SFC<IClasses> = ({ classes }) => {\n  return (\n    <footer className={classes.footer}>\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\n        Sprint Board\n      </Typography>\n      <Typography\n        variant=\"subtitle1\"\n        align=\"center\"\n        color=\"textSecondary\"\n        component=\"p\"\n      >\n        version 0.0.1\n      </Typography>\n    </footer>\n  );\n};\n\n//https://stackoverflow.com/questions/5717093/check-if-a-javascript-string-is-a-url\nfunction isURL(str: string) {\n  var pattern = new RegExp(\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\n    \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|\" + // domain name\n    \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n    \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n    \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\n    \"i\"\n  ); // fragment locator\n  return pattern.test(str);\n}\n\nconst DEFAULT_DATA_URL = \"entries.json\";\n\nclass Blog extends React.Component<PropType, IState> {\n  constructor(props: PropType) {\n    super(props);\n\n    const outputParamsData = queryString.parse(this.props.location.search)\n      .dataUrl;\n    const dataUrl =\n      typeof outputParamsData === \"string\"\n        ? (outputParamsData as string)\n        : undefined;\n\n    this.state = {\n      data: {} as Data,\n      currentRelease: \"\",\n      dataUrl: dataUrl || DEFAULT_DATA_URL,\n    };\n  }\n\n  async componentDidMount() {\n    const values = queryString.parse(this.props.location.search);\n    const localState = await this.props.dataProvider.getData(\n      this.state.dataUrl\n    );\n\n    this.setState({\n      data: localState,\n    });\n  }\n\n  async componentDidUpdate(prevProps: PropType, prevState: IState) {\n    if (prevState.dataUrl != this.state.dataUrl) {\n      const localState = await this.props.dataProvider.getData(\n        this.state.dataUrl\n      );\n      this.setState({\n        data: localState,\n      });\n    }\n  }\n\n  private getCurrentTeam(team: string): 0 | Team | undefined {\n    return (\n      this.state.data.releases &&\n      this.state.data.releases.length &&\n      this.state.data.releases[0].teams.find(el => el.name === team)\n    );\n  }\n\n  render() {\n    const currentTeam = this.props.match.params.team;\n    const { classes } = this.props;\n    const team = this.getCurrentTeam(currentTeam);\n    const sprints = team && team.sprints;\n\n    const { data } = this.state;\n    const currentRelease =\n      data.releases && data.releases.length && data.releases[0];\n    const releaseName = (currentRelease && currentRelease.name) || \"\";\n    const startReleaseDate =\n      (data.releases &&\n        data.releases.length &&\n        new Date(data.releases[0].startDate).getTime()) ||\n      new Date().getTime();\n    const endReleaseDate =\n      (data.releases &&\n        data.releases.length &&\n        new Date(data.releases[0].endDate).getTime()) ||\n      new Date().getTime();\n    const nowDate = new Date().getTime();\n    const calculatedHours = Math.round(\n      (startReleaseDate - nowDate) / (1000 * 60 * 60)\n    );\n    const calculatedDays = Math.round(calculatedHours / 24);\n    const teamReleaseGoals = (team && team.releaseGoals) || [];\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <div className={classes.layout}>\n          <main>\n          <FormControl className={classes.formControl} variant=\"filled\" />\n        <InputLabel htmlFor=\"component-filled\">Data URL</InputLabel>\n        <FilledInput\n          id=\"component-filled\"\n          value={this.state.dataUrl}\n          onChange={event => this.setState({ dataUrl: event.target.value })}\n        />\n            <Board\n              classes={classes}\n              teamReleaseGoals={teamReleaseGoals}\n              sprints={sprints}\n              releaseName={releaseName}\n              calculatedHours={calculatedHours}\n              currentRelease={currentRelease}\n            />\n            <Footer classes={classes} />\n          </main>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(Blog);\n","import { IDataProvider, Data } from './interfaces';\nimport axios from 'axios';\n\nexport default class DataProvider implements IDataProvider {\n    \n    private transformToData(data: any) : Data{\n        if(!data) return {} as Data;\n\n        return data as Data;\n    }\n\n    async getData(url?: string) : Promise<Data> {\n        const localStorageData = localStorage.getItem('localState');\n        const dataUrl = url || 'entries.json';\n\n        if(!localStorageData) {\n            const data = (await axios.get(dataUrl)).data\n            return this.transformToData(data);\n        }\n        \n        return this.transformToData(JSON.parse(localStorageData));\n    }\n\n    saveData(data : Data) : void {\n        localStorage.setItem('localState', JSON.stringify(data));\n    }   \n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Dashboard from \"./App\";\nimport LocalStorageDataProvider from \"./localStorageDataProvider\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\nconst localStorageDataProvider = new LocalStorageDataProvider();\nconst App = () => \n  <Router\n    basename={process.env.PUBLIC_URL}\n  >\n      <Route path=\"/:team\" render={(props) => <Dashboard {...props} dataProvider={localStorageDataProvider} />} />\n  </Router>;\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}