{"version":3,"sources":["Board.tsx","App.tsx","localStorageDataProvider.ts","index.tsx"],"names":["Banner","_ref","calculatedHours","releaseName","classes","react","Paper_default","a","className","mainFeaturedPost","mainFeaturedPostContent","Typography_Typography_default","align","component","variant","color","gutterBottom","paragraph","GoalEntry","_ref2","name","done","ListItem_default","key","Avatar_default","CheckBoxOutlineBlankRounded_default","onClick","ListItemText_default","primary","SprintEntry","_ref3","date","goals","Grid_default","item","xs","md","Card_default","card","cardDetails","CardContent_default","List_default","map","g","description","Hidden_default","xsDown","CardMedia_default","cardMedia","image","title","Board","_ref4","sprints","teamReleaseGoals","currentRelease","layout","Board_Banner","container","direction","spacing","cardGrid","post","Board_SprintEntry","length","startDate","Divider_default","CardHeader_default","subheader","Board_GoalEntry","Footer","react_default","createElement","footer","Typography_default","DEFAULT_DATA_URL","Blog","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","outputParamsData","queryString","parse","location","search","dataUrl","undefined","state","data","dataProvider","getData","localState","setState","prevProps","prevState","team","releases","teams","find","el","_this2","console","log","currentTeam","match","params","getCurrentTeam","startReleaseDate","Date","getTime","nowDate","endDate","Math","round","releaseGoals","Fragment","CssBaseline_default","FormControl_default","formControl","InputLabel_default","htmlFor","FilledInput_default","id","value","onChange","event","target","Button_default","button","src_Board","App_Footer","React","Component","withStyles","theme","defineProperty","width","marginLeft","unit","marginRight","breakpoints","up","toolbarMain","borderBottom","concat","palette","grey","toolbarTitle","flex","toolbarSecondary","justifyContent","backgroundColor","common","white","marginBottom","padding","paddingRight","mainGrid","marginTop","display","markdown","sidebarAboutBox","sidebarSection","background","paper","DataProvider","url","localStorageData","localStorage","getItem","axios","get","transformToData","JSON","setItem","stringify","localStorageDataProvider","LocalStorageDataProvider","ReactDOM","render","BrowserRouter","basename","Route","path","src_App","assign","document","getElementById"],"mappings":"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","file":"static/js/main.554be021.chunk.js","sourcesContent":["import { Sprint, Release, ReleaseGoal, Goal, IClasses } from \"./interfaces\";\nimport * as React from \"react\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport FilledInput from \"@material-ui/core/FilledInput/FilledInput\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Card from \"@material-ui/core/Card/Card\";\nimport Hidden from \"@material-ui/core/Hidden/Hidden\";\nimport CardMedia from \"@material-ui/core/CardMedia/CardMedia\";\nimport Divider from \"@material-ui/core/Divider/Divider\";\nimport CardContent from \"@material-ui/core/CardContent/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader/CardHeader\";\nimport List from \"@material-ui/core/List/List\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport CheckBoxEmpty from \"@material-ui/icons/CheckBoxOutlineBlankRounded\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\n\n\nexport interface IBanner extends IClasses {\n  releaseName?: string;\n  calculatedHours?: number;\n}\n\ninterface ISprintEntry extends IClasses, Sprint {}\n\ninterface props extends IClasses, IBanner {\n  sprints?: Sprint[] | 0 | undefined;\n  currentRelease: Release | 0;\n  teamReleaseGoals?: ReleaseGoal[];\n}\n\nconst Banner: React.SFC<IBanner> = ({\n  calculatedHours,\n  releaseName,\n  classes,\n}) => {\n  return (\n    <Paper className={classes.mainFeaturedPost}>\n      <div className={classes.mainFeaturedPostContent}>\n        <Typography\n          align=\"center\"\n          component=\"h1\"\n          variant=\"h3\"\n          color=\"inherit\"\n          gutterBottom\n        >\n          Release \"{releaseName}\"\" Countdown\n        </Typography>\n        <Typography align=\"center\" variant=\"h3\" color=\"error\" paragraph>\n          {calculatedHours} hours\n        </Typography>\n      </div>\n    </Paper>\n  );\n};\nconst GoalEntry: React.SFC<ReleaseGoal> = ({ name, done }) => {\n  return (\n    <ListItem key={name}>\n      <Avatar>\n        <CheckBoxEmpty onClick={() => {}} />\n      </Avatar>\n      <ListItemText primary={name} />\n    </ListItem>\n  );\n};\n\nconst SprintEntry: React.SFC<ISprintEntry> = ({\n  name,\n  date,\n  goals,\n  classes,\n}) => {\n  return (\n    <Grid item key={name} xs={12} md={6}>\n      <Card className={classes.card}>\n        <div className={classes.cardDetails}>\n          <CardContent>\n            <Typography component=\"h2\" variant=\"h5\">\n              {name}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {date}\n            </Typography>\n            <Typography variant=\"subtitle1\" paragraph>\n              <List>\n                {goals.map((g: any) => {\n                  return (\n                    <ListItem key={g.description}>\n                      <Avatar>\n                        <CheckBoxEmpty onClick={() => {}} />\n                      </Avatar>\n                      <ListItemText primary={g.description} />\n                    </ListItem>\n                  );\n                })}\n              </List>\n            </Typography>\n          </CardContent>\n        </div>\n        <Hidden xsDown>\n          <CardMedia\n            className={classes.cardMedia}\n            image=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\" // eslint-disable-line max-len\n            title=\"Image title\"\n          />\n        </Hidden>\n      </Card>\n    </Grid>\n  );\n};\n\n\n\nconst Board: React.SFC<props> = ({\n  classes,\n  sprints,\n  releaseName,\n  calculatedHours,\n  teamReleaseGoals,\n  currentRelease,\n}) => {\n  return (\n    <div className={classes.layout}>\n      <main>\n        <Banner classes={classes} releaseName={releaseName} calculatedHours={calculatedHours} />\n        <Grid\n          container\n          direction=\"row\"\n          spacing={40}\n          className={classes.cardGrid}\n        >\n          <Grid container direction=\"column\">\n            {sprints && sprints.map(post => <SprintEntry name={post.name} date={post.date} goals={post.goals} classes={classes} />)}\n            {teamReleaseGoals && teamReleaseGoals.length && (\n              <Grid container direction=\"column\">\n                <Grid item key=\"12345667\" xs={12} md={6}>\n                  <Card className={classes.card}>\n                    <div className={classes.cardDetails}>\n                      <CardContent>\n                        <Typography component=\"h2\" variant=\"h5\">\n                          Release \"{releaseName}\"\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                          {currentRelease && currentRelease.startDate}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" paragraph>\n                          <List>\n                            <Divider variant=\"middle\" />\n\n                            <CardHeader\n                              title=\"Team Goals\"\n                              subheader=\"Wookiees\"\n                            />\n                            {teamReleaseGoals.map(g => (\n                              <GoalEntry name={g.name} done={g.done} />\n                            ))}\n                            <Divider variant=\"middle\" />\n                            <CardHeader\n                              subheader=\"234343 \"\n                              title=\"Release Themes\"\n                            />\n                            {teamReleaseGoals.map(g => (\n                              <GoalEntry name={g.name} done={g.done} />\n                            ))}\n                            <Divider variant=\"middle\" />\n                          </List>\n                        </Typography>\n                      </CardContent>\n                    </div>\n                    <Hidden xsDown>\n                      <CardMedia\n                        className={classes.cardMedia}\n                        image=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\" // eslint-disable-line max-len\n                        title=\"Image title\"\n                      />\n                    </Hidden>\n                  </Card>\n                </Grid>\n                <Divider variant=\"middle\" />\n              </Grid>\n            )}\n          </Grid>\n        </Grid>\n      </main>\n    </div>\n  );\n};\n\nexport default Board;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport CheckBoxEmpty from \"@material-ui/icons/CheckBoxOutlineBlankRounded\";\nimport CheckBoxRounded from \"@material-ui/icons/CheckBoxRounded\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { IDataProvider, Data, Team, IClasses } from \"./interfaces\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport FilledInput from \"@material-ui/core/FilledInput/FilledInput\";\nimport Board from \"./Board\";\nimport queryString from \"query-string\";\n\nconst styles = (theme: any) => ({\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n      width: 1100,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  toolbarMain: {\n    borderBottom: `1px solid ${theme.palette.grey[300]}`,\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: \"space-between\",\n  },\n  mainFeaturedPost: {\n    backgroundColor: theme.palette.grey[800],\n    // background: `url(\"./wokiees.jpg\")`,\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing.unit * 4,\n  },\n  mainFeaturedPostContent: {\n    padding: `${theme.spacing.unit * 6}px`,\n    [theme.breakpoints.up(\"md\")]: {\n      paddingRight: 0,\n    },\n  },\n  mainGrid: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  card: {\n    display: \"flex\",\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  cardGrid: {\n    padding: `${theme.spacing.unit * 8}px 0`,\n  },\n  cardMedia: {\n    width: 160,\n  },\n  markdown: {\n    padding: `${theme.spacing.unit * 3}px 0`,\n  },\n  sidebarAboutBox: {\n    padding: theme.spacing.unit * 2,\n    backgroundColor: theme.palette.grey[200],\n  },\n  sidebarSection: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing.unit * 8,\n    padding: `${theme.spacing.unit * 6}px 0`,\n  },\n});\n\ninterface PropType {\n  classes: any;\n  dataProvider: IDataProvider;\n  match: any;\n  location: any;\n  // releases: any;\n}\ninterface IState {\n  data: Data;\n  currentRelease: string;\n  dataUrl: string;\n}\n\nconst Footer: React.SFC<IClasses> = ({ classes }) => {\n  return (\n    <footer className={classes.footer}>\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\n        Sprint Board\n      </Typography>\n      <Typography\n        variant=\"subtitle1\"\n        align=\"center\"\n        color=\"textSecondary\"\n        component=\"p\"\n      >\n        version 0.0.1\n      </Typography>\n    </footer>\n  );\n};\n\n//https://stackoverflow.com/questions/5717093/check-if-a-javascript-string-is-a-url\nfunction isURL(str: string) {\n  var pattern = new RegExp(\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\n    \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|\" + // domain name\n    \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n    \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n    \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\n    \"i\"\n  ); // fragment locator\n  return pattern.test(str);\n}\n\nconst DEFAULT_DATA_URL = \"entries.json\";\n\nclass Blog extends React.Component<PropType, IState> {\n  constructor(props: PropType) {\n    super(props);\n\n    const outputParamsData = queryString.parse(this.props.location.search)\n      .dataUrl;\n    const dataUrl =\n      typeof outputParamsData === \"string\"\n        ? (outputParamsData as string)\n        : undefined;\n\n    this.state = {\n      data: {} as Data,\n      currentRelease: \"\",\n      dataUrl: dataUrl || DEFAULT_DATA_URL,\n    };\n  }\n\n  async componentDidMount() {\n    const values = queryString.parse(this.props.location.search);\n    const localState = await this.props.dataProvider.getData(\n      this.state.dataUrl\n    );\n\n    this.setState({\n      data: localState,\n    });\n  }\n\n  async componentDidUpdate(prevProps: PropType, prevState: IState) {\n    if (prevState.dataUrl != this.state.dataUrl) {\n      const localState = await this.props.dataProvider.getData(\n        this.state.dataUrl\n      );\n      this.setState({\n        data: localState,\n      });\n    }\n  }\n\n  private getCurrentTeam(team: string): 0 | Team | undefined {\n    return (\n      this.state.data.releases &&\n      this.state.data.releases.length &&\n      this.state.data.releases[0].teams.find(el => el.name === team)\n    );\n  }\n\n  render() {\n    console.log(\"state\", this.props.location.search);\n    const currentTeam = this.props.match.params.team;\n    const { classes } = this.props;\n    const team = this.getCurrentTeam(currentTeam);\n    const sprints = team && team.sprints;\n\n    const { data } = this.state;\n    const currentRelease =\n      data.releases && data.releases.length && data.releases[0];\n    const releaseName = (currentRelease && currentRelease.name) || \"\";\n    const startReleaseDate =\n      (data.releases &&\n        data.releases.length &&\n        new Date(data.releases[0].startDate).getTime()) ||\n      new Date().getTime();\n    const endReleaseDate =\n      (data.releases &&\n        data.releases.length &&\n        new Date(data.releases[0].endDate).getTime()) ||\n      new Date().getTime();\n    const nowDate = new Date().getTime();\n    const calculatedHours = Math.round(\n      (startReleaseDate - nowDate) / (1000 * 60 * 60)\n    );\n    const calculatedDays = Math.round(calculatedHours / 24);\n    const teamReleaseGoals = (team && team.releaseGoals) || [];\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <FormControl className={classes.formControl} variant=\"filled\" />\n        <InputLabel htmlFor=\"component-filled\">Data URL</InputLabel>\n        <FilledInput\n          id=\"component-filled\"\n          value={this.state.dataUrl}\n          onChange={event => this.setState({ dataUrl: event.target.value })}\n        />\n        <label htmlFor=\"contained-button-file\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >\n            Primary\n          </Button>\n        </label>\n        <Board\n          classes={classes}\n          teamReleaseGoals={teamReleaseGoals}\n          sprints={sprints}\n          releaseName={releaseName}\n          calculatedHours={calculatedHours}\n          currentRelease={currentRelease}\n        />\n        <Footer classes={classes} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(Blog);\n","import { IDataProvider, Data } from './interfaces';\nimport axios from 'axios';\n\nexport default class DataProvider implements IDataProvider {\n    \n    private transformToData(data: any) : Data{\n        if(!data) return {} as Data;\n\n        return data as Data;\n    }\n\n    async getData(url?: string) : Promise<Data> {\n        const localStorageData = localStorage.getItem('localState');\n        const dataUrl = url || 'entries.json';\n\n        if(!localStorageData) {\n            const data = (await axios.get(dataUrl)).data\n            return this.transformToData(data);\n        }\n        \n        return this.transformToData(JSON.parse(localStorageData));\n    }\n\n    saveData(data : Data) : void {\n        localStorage.setItem('localState', JSON.stringify(data));\n    }   \n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Dashboard from \"./App\";\nimport LocalStorageDataProvider from \"./localStorageDataProvider\";\n\nconst localStorageDataProvider = new LocalStorageDataProvider();\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nconst App = () => \n  <Router\n    basename=\"/scrum-board-typescript/\"\n  >\n      <Route path=\"/:team\" render={(props) => <Dashboard {...props} dataProvider={localStorageDataProvider} />} />\n  </Router>;\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}